name: publish-modix
on:
  workflow_run:
    workflows: ["build-modix"]
    types:
      - completed
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
jobs:
  publish:
    runs-on: ubuntu-latest
    if: github.event.workflow_run.conclusion == 'success'
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1.10.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: 'Download artifact'
        uses: actions/github-script@v3.1.0
        with:
          script: |
            var artifacts = await github.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: ${{github.event.workflow_run.id }},
            });
            var matchArtifact = artifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "docker-container"
            })[0];
            var download = await github.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifact.id,
               archive_format: 'zip',
            });
            var fs = require('fs');
            fs.writeFileSync('/tmp/container.tar.gz.zip', Buffer.from(download.data));
      - run: unzip /tmp/container.tar.gz.zip -d /tmp
          
      - name: extract artifact
        run: gunzip /tmp/container.tar.gz
        
      - name: import image
        run: |
          docker image import /tmp/container.tar imported
          while read tag; do    
            docker image tag imported $tag
          done < /tmp/tags
        
      - name: push image
        run: |
          while read tag; do    
            docker push $tag 
          done < /tmp/tags

      - name: Sleep for 15 seconds
        if: github.event.workflow_run.event != 'pull_request'
        run: sleep 15s
        shell: bash
        
      - name: Signal New Build
        if: github.event.workflow_run.event != 'pull_request'
        uses: enflo/curl-action@fabe347922c7a9e88bafa15c4b7d6326ea802695
        with:
          curl: -X POST ${{ secrets.MODIX_UPDATE_WEBHOOK }}
