@page "/commands"
@using Modix.Services.CommandHelp;
@using Modix.Services.Utilities;
@using Modix.Web.Components
@using Modix.Web.Models.Commands;
@using MudBlazor;
@using Humanizer;

<PageTitle>Modix - Commands</PageTitle>

<AnchorNavigation />

@if (Modules is not null)
{
    <MudGrid>
        <MudItem sm="3" md="2" xl="1" Class="d-none d-sm-flex">
            <MudList SelectedValue="string.Empty" Clickable="true" Class="sticky align-self-start pa-3" Style="top: 0" Color="Color.Primary">
                @foreach (var module in Modules.OrderBy(x => x.Name))
                {
                    <MudListItem Class="py-0" Value="@module.Name" Href="@("commands/#" + module.Name.Dehumanize())">
                        <MudText Typo="Typo.caption" Style="text-transform: uppercase;">@module.Name</MudText>
                    </MudListItem>
                }
            </MudList>
        </MudItem>

        <MudItem sm="9" md="10" xl="11">
            <div class="d-flex flex-column">
                @foreach (var module in Modules.OrderBy(m => m.Name))
                {
                    <MudContainer MaxWidth="MaxWidth.False">
                        <MudLink Underline="Underline.None" Href="@("commands/#" + module.Name.Dehumanize())" UserAttributes="@(new Dictionary<string, object>{ { "id", module.Name.Dehumanize() } })">
                            <MudText Typo="Typo.h4">@module.Name</MudText>
                        </MudLink>
                        <MudText Typo="Typo.h5">@module.Summary</MudText>

                        @foreach (var command in module.Commands)
                        {
                            <MudCard Class="mb-6" Style="background-color:#f5f5f5" Elevation="2">
                                @foreach (var alias in command.Aliases)
                                {
                                    <div class="control flex-md-row flex-column flex-wrap">
                                        <MudText Class="command" Typo="Typo.h6">@(command.IsSlashCommand ? '/' : '!')@alias.ToLower()</MudText>
                                        @if (alias == command.Aliases.First())
                                        {
                                            <MudText Class="summary">@command.Summary</MudText>
                                            <div class="d-flex flex-wrap">
                                                @foreach (var parameter in command.Parameters)
                                                {
                                                    <div class="tags">
                                                        <MudText Inline="true" Class="tag is-dark">@parameter.Name</MudText>

                                                        @if (parameter.Summary is not null || parameter.Options.Count > 0)
                                                        {
                                                            var description = $"{parameter.Summary} {string.Join(", ", parameter.Options)}";
                                                            <MudTooltip Inline="true"
                                                                        ShowOnHover="true"
                                                                        Placement="Placement.Top"
                                                                        Text="@description"
                                                                        RootClass="tag"
                                                                        RootStyle="background-color:#f5f5f5">
                                                                &hellip;
                                                            </MudTooltip>
                                                        }

                                                        <span class="tag is-info">@parameter.Type</span>

                                                        @if (parameter.IsOptional)
                                                        {

                                                            <MudTooltip Inline="true"
                                                                        ShowOnHover="true"
                                                                        Placement="Placement.Top"
                                                                        Text="Optional"
                                                                        RootClass="tag"
                                                                        RootStyle="background-color:#ffdd57;color:rgba(0,0,0,.7)">
                                                                ?
                                                            </MudTooltip>
                                                        }
                                                    </div>
                                                }
                                            </div>

                                        }
                                    </div>
                                }
                            </MudCard>
                        }

                    </MudContainer>
                    <MudDivider Class="my-3" Light="true"></MudDivider>
                }

            </div>
        </MudItem>
    </MudGrid>
}

<style>

    .summary {
        display: flex;
        align-items: center;
        margin-right: .25rem;
    }

    .command {
        margin-right: .75rem;
        font-family: Consolas,monospace;
        font-weight: 700;
    }

    .control {
        padding: .5em 1em;
        display: flex;
    }

    .tags {
        margin-right: 1rem;
        white-space: nowrap;
        flex-wrap: nowrap;
    }

    .tags .tag {
        border-radius: 4px;
        display: inline-flex;
        height: 2em;
        margin: 0.16em 0 0.16em 0 !important;
        align-items: center;
        padding-left: .75em;
        padding-right: .75em;
        font-size: .75rem;
    }

    .tags .tag.is-dark {
        background-color: #363636;
        color: #fff
    }

    .tags .tag.is-info {
        background-color: #3298dc;
        color: #fff
    }

    .tag:not(:last-child) {
        border-bottom-right-radius: 0;
        border-top-right-radius: 0;
    }

    .tag:not(:first-child) {
        margin-left: 0;
        border-bottom-left-radius: 0;
        border-top-left-radius: 0;
    }

</style>

@code {
    [Inject]
    public ICommandHelpService CommandHelpService { get; set; } = null!;

    private IReadOnlyCollection<Module>? Modules;

    protected override void OnAfterRender(bool firstRender)
    {
        if (!firstRender)
            return;

        var modules = CommandHelpService.GetModuleHelpData();

        Modules = modules.Select(m =>
        {
            var commands = m.Commands.Select(c => new Command(c.Name, c.Summary, FormatUtilities.CollapsePlurals(c.Aliases), c.Parameters, c.IsSlashCommand));
            return new Module(m.Name, m.Summary, commands);
        }).ToArray();

        StateHasChanged();
    }
}
