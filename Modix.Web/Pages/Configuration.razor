@page "/config"
@page "/config/{SubPage}"

@attribute [Authorize(
    Roles = $@"
        {nameof(AuthorizationClaim.DesignatedRoleMappingRead)},
        {nameof(AuthorizationClaim.DesignatedChannelMappingRead)},
        {nameof(AuthorizationClaim.AuthorizationConfigure)}")]

@using Modix.Data.Models.Core;
@using Modix.Web.Components
@using Modix.Web.Components.Configuration
@using MudBlazor

<PageTitle>Modix - Configuration</PageTitle>

<CascadingAuthenticationState>

    <MudGrid>
        <MudItem xs="2">
            <MudText Typo="Typo.h6">Configuration</MudText>
            <MudPaper>
                <MudList SelectedValue="@SubPage" Clickable="true">
                    <MudListItem Value="@("roles")" Href="/config/roles" Text="Roles"/>
                    <MudDivider/>
                    <MudListItem Value="@("channels")" Href="/config/channels" Text="Channels" />
                    <MudDivider/>
                    <MudListItem Value="@("claims")" Href="/config/claims" Text="Claims" />
                </MudList>
            </MudPaper>
        </MudItem>
        <MudItem xs="9">
            @if (SubPage == "roles")
            {
                <AuthorizeView Policy="@nameof(AuthorizationClaim.DesignatedRoleMappingRead)">
                    <Roles />
                </AuthorizeView>
            }
            else if (SubPage == "channels")
            {
                <AuthorizeView Policy="@nameof(AuthorizationClaim.DesignatedChannelMappingRead)">
                    <Channels />
                </AuthorizeView>
            }
            else if (SubPage == "claims")
            {
                <AuthorizeView Policy="@nameof(AuthorizationClaim.AuthorizationConfigure)">
                    <Claims />
                </AuthorizeView>
            }
        </MudItem>
    </MudGrid>
</CascadingAuthenticationState>

@code {

    [Parameter]
    public string? SubPage { get; set; }

}
