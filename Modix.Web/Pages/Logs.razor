@page "/logs/{SubPage}"
@page "/logs"
@attribute [Authorize(Policy = nameof(AuthorizationClaim.ModerationRead))]
@using Modix.Data.Models.Core;
@using Modix.Web.Components
@using MudBlazor

<PageTitle>Modix - Logs</PageTitle>

<CascadingAuthenticationState>
    <MudText Typo="Typo.h6">Logs</MudText>

    <MudDrawerContainer Class="mud-height-full">
        <MudDrawer Open="true" Elevation="0" Variant="DrawerVariant.Persistent" Style="position: fixed;">
            <MudNavMenu Class="d-flex flex-column px-5">
                <MudLink Href="/logs/deletedMessages">Deletions</MudLink>
                <MudLink Href="/logs/infractions">Infractions</MudLink>
            </MudNavMenu>
        </MudDrawer>
        <div class="d-flex justify-center mud-height-full flex-column">
            @if(SubPage == "infractions")
            {
                <AuthorizeView Policy="@nameof(AuthorizationClaim.ModerationRead)">
                    <Infractions/>
                </AuthorizeView>
            }
            else if(SubPage == "deletedMessages")
            {
                <AuthorizeView Policy="@nameof(AuthorizationClaim.LogViewDeletedMessages)">
                    <DeletedMessages/>
                </AuthorizeView>
            }
        </div>
    </MudDrawerContainer>
</CascadingAuthenticationState>

@code {
    [Parameter]
    public string SubPage { get; set; } = "infractions";
}
