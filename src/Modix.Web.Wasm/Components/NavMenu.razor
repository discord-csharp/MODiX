@using Microsoft.AspNetCore.Components.Authorization
@using Modix.Web.Models;
@using MudBlazor;
@using System.Security.Claims;

<MudAppBar Elevation="0" Dense="false" DisableGutters="true" Color="Color.Primary" Fixed="false">
    <div class="d-flex d-lg-none flex-grow-1">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" OnClick="ToggleDrawer" />
    </div>

    <div class="d-none d-lg-flex flex-grow-1" style="height: 100%">
        <NavMenuLinks />
    </div>


    @* The color: inherit here is needed to keep the colors consistent between link icons and light/dark theme icons
    I would suggest not thinking about it too much :) *@
    <MudToggleIconButton Class="mr-2" Style="color: inherit"
                            Size="Size.Small"
                            ToggledSize="Size.Small"
                            Toggled="DarkMode"
                            ToggledChanged="ToggleDarkMode"
                            ToggledIcon="@Icons.Material.Filled.LightMode"
                            Icon="@Icons.Material.Filled.DarkMode"
                            Color="Color.Surface" />

    <AuthorizeView>
        <MiniUser />
    </AuthorizeView>
</MudAppBar>

<MudDrawer Color="Color.Primary" @bind-Open="_drawerVisible" Elevation="1" Anchor="Anchor.Top" Variant="DrawerVariant.Temporary">
    <MudNavMenu Color="Color.Surface" Bordered="true">
        <NavMenuLinks />
    </MudNavMenu>
</MudDrawer>

@code {
    // [Inject]
    // public required CookieService CookieService { get; set; }

    [Parameter]
    public bool DarkMode { get; set; }

    [Parameter]
    public EventCallback<bool> DarkModeChanged { get; set; }

    private bool _drawerVisible;

    private void ToggleDrawer() => _drawerVisible = !_drawerVisible;

    private async Task ToggleDarkMode(bool toggled)
    {
        DarkMode = toggled;
        await DarkModeChanged.InvokeAsync(DarkMode);
        // await CookieService.SetUseDarkModeAsync(DarkMode);
    }
}
